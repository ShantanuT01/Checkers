#BlueJ class context
comment0.target=Checkers
comment1.params=
comment1.target=Checkers()
comment10.params=
comment10.target=boolean\ isGameOver()
comment11.params=
comment11.target=Piece\ getWinner()
comment12.params=from\ to
comment12.target=void\ move(Point,\ Point)
comment12.text=\n\ \ Move\ the\ piece\ located\ at\ Point\ from\ to\ Point\ to\n
comment13.params=p
comment13.target=boolean\ isEmpty(Point)
comment13.text=\n\ \ Return\ true\ if\ there\ is\ no\ piece\ at\ Point\ p\n
comment14.params=piece
comment14.target=java.util.List\ getPieces(Piece)
comment14.text=\n\ \ Return\ a\ List\ of\ the\ Points\ that\ contain\ pieces\ that\ match\ the\ specified\ piece\ (Piece.BLACK,\ Piece.WHITE)\n
comment15.params=side
comment15.target=boolean\ hasMoves(Piece)
comment16.params=side
comment16.target=java.util.LinkedList\ getMoves(Piece)
comment17.params=a\ b
comment17.target=boolean\ checker(int,\ int)
comment18.params=from
comment18.target=java.util.LinkedList\ getPossibleJumps(Point)
comment19.params=x
comment19.target=boolean\ isLegalPoint(Point)
comment2.params=
comment2.target=Piece\ getCurrentPlayer()
comment2.text=\n\ \ Return\ the\ current\ turn\ holder's\ Piece,\ Piece.BLACK\ or\ Piece.WHITE\n
comment20.params=x
comment20.target=void\ kingMe(Point)
comment21.params=x
comment21.target=boolean\ isValidPieceToMove(Point)
comment22.params=x\ y
comment22.target=boolean\ isOfSameType(Point,\ Point)
comment23.params=a\ b
comment23.target=boolean\ isOfSameType(Piece,\ Piece)
comment24.params=p
comment24.target=Piece\ getSide(Piece)
comment25.params=start
comment25.target=java.util.LinkedList\ getPossibleMoves(Point)
comment26.params=move
comment26.target=boolean\ isValidMove(Move)
comment27.params=num\ move\ side
comment27.target=void\ recordMove(int,\ Move,\ Piece)
comment28.params=
comment28.target=java.util.Queue\ getWhiteMoves()
comment29.params=
comment29.target=java.util.Queue\ getBlackMoves()
comment3.params=piece
comment3.target=void\ setCurrentPlayer(Piece)
comment3.text=\n\ \ Setter\ for\ currentPlayer\ instance\ variable\n
comment30.params=
comment30.target=boolean\ hasJumps()
comment4.params=
comment4.target=void\ nextPlayer()
comment4.text=\n\ \ Change\ the\ currentPlayer\n\ \ \ \ \ \ Piece.BLACK\ ->\ Piece.WHITE\n\ \ \ \ \ \ Piece.WHITE\ ->\ Piece.BLACK\n
comment5.params=move
comment5.target=boolean\ isLegalMove(Move)
comment6.params=from\ to
comment6.target=Point\ getCapturedPiece(Point,\ Point)
comment7.params=move
comment7.target=boolean\ isLegalJump(Move)
comment8.params=p
comment8.target=Piece\ getPiece(Point)
comment8.text=\n\ \ Return\ the\ piece\ that\ is\ on\ the\ board\ at\ the\ specified\ Point\n\ \ \ \ \ \ Piece.BLACK,\ Piece.WHITE\n
comment9.params=piece\ p
comment9.target=void\ setPiece(Piece,\ Point)
numComments=31
